/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
object Problem2 extends App {
  def fibonacci(n: Int = 0, m: Int = 1, numbers: Vector[Int] = Vector()): Vector[Int] = n + m match {
    case next if next >= 4000000 => numbers
    case next if even(next) => fibonacci(m, next, numbers :+ next)
    case next => fibonacci(m, next, numbers)
  }

  def even(n: Int) = (n & 1) == 0

  print(fibonacci().sum)
}
