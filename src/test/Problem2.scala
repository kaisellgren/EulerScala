/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
object Problem2 extends App {
  def fibonacci(n: Int, m: Int, limit: Int) = {
    def accumulator(numbers: Vector[Int], n: Int, m: Int): Vector[Int] = n + m match {
      case next if next >= limit => numbers
      case next => accumulator(numbers :+ next, m, next)
    }
    
    accumulator(Vector(), n, m)
  }

  def even(n: Int) = (n & 1) == 0

  print(fibonacci(0, 1, limit = 4000000).filter(even).sum)
}
